package idw.model.pojos.agramkow;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ResultsHeader generated by hbm2java
 */
@Entity
@Table(name = "RESULTS_HEADER")
public class ResultsHeader implements java.io.Serializable {

	private ResultsHeaderId id;
	private Areas areas;
	
	private Servers servers;
	private Units units;
	private Devices devices;
	
	private Failcodes failcodes;
	
	private Line line;
	
	private Date dateTested;
	private String modelId;
	private Byte status;
	private Byte complete;
	private String limitsDescriptor;
	private Date dateStartTest;
	private Date syncDate;
	private Byte rework;
	private Byte preWork;
	private Byte postWork;
	private Short processorId;
	private Long parentSeqno;
	
	private String barcode;
	//private Long seqno;
	



	public ResultsHeader() {
	}

	public ResultsHeader(ResultsHeaderId id, Areas areas,
			 Servers servers, Units units,
			Devices devices,
			Failcodes failcodes, Line line,
			 Date dateTested, String modelId,
			Byte status, Byte complete, String barcode
			//, Long seqno
			) {
		this.id = id;
		this.areas = areas;
		
		this.servers = servers;
		this.units = units;
		this.devices = devices;
		
		this.failcodes = failcodes;
		
		this.line = line;
		
		this.dateTested = dateTested;
		this.modelId = modelId;
		this.status = status;
		this.complete = complete;
		this.barcode = barcode;
		//this.seqno = seqno;
	}

	public ResultsHeader(ResultsHeaderId id, Areas areas,
			 Servers servers, Units units,
			Devices devices, 
			Failcodes failcodes, Line line,
			 Date dateTested, String modelId,
			Byte status, Byte complete, String limitsDescriptor,
			Date dateStartTest, Date syncDate, Byte rework, Byte preWork,
			Byte postWork, Short processorId, Long parentSeqno
			, String barcode
			//, Long seqno
			) {
		this.id = id;
		this.areas = areas;
		
		this.servers = servers;
		this.units = units;
		this.devices = devices;
		
		this.failcodes = failcodes;
		
		this.line = line;
		
		this.dateTested = dateTested;
		this.modelId = modelId;
		this.status = status;
		this.complete = complete;
		this.limitsDescriptor = limitsDescriptor;
		this.dateStartTest = dateStartTest;
		this.syncDate = syncDate;
		this.rework = rework;
		this.preWork = preWork;
		this.postWork = postWork;
		this.processorId = processorId;
		this.parentSeqno = parentSeqno;
		
		this.barcode = barcode;
		//this.seqno = seqno;
		
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "seqno", column = @Column(name = "SEQNO", nullable = false)),
			@AttributeOverride(name = "server", column = @Column(name = "SERVER", nullable = false)) })
	public ResultsHeaderId getId() {
		return this.id;
	}

	public void setId(ResultsHeaderId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "AREA_ID", referencedColumnName = "AREA_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SERVER", referencedColumnName = "SERVER", nullable = false, insertable = false, updatable = false) })
	public Areas getAreas() {
		return this.areas;
	}

	public void setAreas(Areas areas) {
		this.areas = areas;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SERVER", nullable = false, insertable = false, updatable = false)
	public Servers getServers() {
		return this.servers;
	}

	public void setServers(Servers servers) {
		this.servers = servers;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "UNIT_ID", referencedColumnName = "UNIT_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SERVER", referencedColumnName = "SERVER", nullable = false, insertable = false, updatable = false) })
	public Units getUnits() {
		return this.units;
	}

	public void setUnits(Units units) {
		this.units = units;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEVICE_ID", nullable = false)
	public Devices getDevices() {
		return this.devices;
	}

	public void setDevices(Devices devices) {
		this.devices = devices;
	}



	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "FAILCODE", referencedColumnName = "ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "DEVICE_ID", referencedColumnName = "DEVICE_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SERVER", referencedColumnName = "SERVER", nullable = false, insertable = false, updatable = false) })
	public Failcodes getFailcodes() {
		return this.failcodes;
	}

	public void setFailcodes(Failcodes failcodes) {
		this.failcodes = failcodes;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "LINE_ID", referencedColumnName = "LINE_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SERVER", referencedColumnName = "SERVER", nullable = false, insertable = false, updatable = false) })
	public Line getLine() {
		return this.line;
	}

	public void setLine(Line line) {
		this.line = line;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_TESTED", nullable = false, length = 23)
	public Date getDateTested() {
		return this.dateTested;
	}

	public void setDateTested(Date dateTested) {
		this.dateTested = dateTested;
	}

	@Column(name = "MODEL_ID", nullable = false)
	public String getModelId() {
		return this.modelId;
	}

	public void setModelId(String modelId) {
		this.modelId = modelId;
	}

	@Column(name = "STATUS", nullable = false)
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Column(name = "COMPLETE", nullable = false)
	public Byte getComplete() {
		return this.complete;
	}

	public void setComplete(Byte complete) {
		this.complete = complete;
	}

	@Column(name = "LIMITS_DESCRIPTOR")
	public String getLimitsDescriptor() {
		return this.limitsDescriptor;
	}

	public void setLimitsDescriptor(String limitsDescriptor) {
		this.limitsDescriptor = limitsDescriptor;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_START_TEST", length = 23)
	public Date getDateStartTest() {
		return this.dateStartTest;
	}

	public void setDateStartTest(Date dateStartTest) {
		this.dateStartTest = dateStartTest;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SYNC_DATE", length = 23)
	public Date getSyncDate() {
		return this.syncDate;
	}

	public void setSyncDate(Date syncDate) {
		this.syncDate = syncDate;
	}

	@Column(name = "REWORK")
	public Byte getRework() {
		return this.rework;
	}

	public void setRework(Byte rework) {
		this.rework = rework;
	}

	@Column(name = "PRE_WORK")
	public Byte getPreWork() {
		return this.preWork;
	}

	public void setPreWork(Byte preWork) {
		this.preWork = preWork;
	}

	@Column(name = "POST_WORK")
	public Byte getPostWork() {
		return this.postWork;
	}

	public void setPostWork(Byte postWork) {
		this.postWork = postWork;
	}

	@Column(name = "PROCESSOR_ID")
	public Short getProcessorId() {
		return this.processorId;
	}

	public void setProcessorId(Short processorId) {
		this.processorId = processorId;
	}

	@Column(name = "PARENT_SEQNO")
	public Long getParentSeqno() {
		return this.parentSeqno;
	}

	public void setParentSeqno(Long parentSeqno) {
		this.parentSeqno = parentSeqno;
	}


	@Column(name = "BARCODE")
	public String getBarcode() {
		return barcode;
	}
	public void setBarcode(String barcode) {
		this.barcode = barcode;
	}

	/*
	@Column(name = "SEQNO")
	public Long getSeqno() {
		return seqno;
	}
	public void setSeqno(Long seqno) {
		this.seqno = seqno;
	}*/

}
