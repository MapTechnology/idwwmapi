package idw.model.pojos.agramkow;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Units generated by hbm2java
 */
@Entity
@Table(name = "UNITS")
public class Units implements java.io.Serializable {

	private UnitsId id;
	private Servers servers;
	//private LimitType limitType;
	private Devices devices;
	private String descriptor;
	private String description;
	private String note;
	private String config;
	private Short lineId;
	private Short pcId;
	private Short areaId;
	private String port;
	private Byte finaleCheck;
	private String unitData;
	private String createdBy;
	private Date createdDate;
	private String changedBy;
	private Date changedDate;
	private Short passUnitId;
	private Short failUnitId;
	private Byte deleted;
	
	private Set<ResultsHeader> resultsHeaders = new HashSet<ResultsHeader>(0);
	

	public Units() {
	}

	public Units(UnitsId id, Servers servers, 
			Devices devices, Short lineId, Short pcId, Short areaId,
			Byte finaleCheck, Date createdDate, Date changedDate,
			Short passUnitId, Short failUnitId, Byte deleted) {
		this.id = id;
		this.servers = servers;
		
		this.devices = devices;
		this.lineId = lineId;
		this.pcId = pcId;
		this.areaId = areaId;
		this.finaleCheck = finaleCheck;
		this.createdDate = createdDate;
		this.changedDate = changedDate;
		this.passUnitId = passUnitId;
		this.failUnitId = failUnitId;
		this.deleted = deleted;
	}

	public Units(UnitsId id, Servers servers, 
			Devices devices, String descriptor, String description,
			String note, String config, Short lineId, Short pcId,
			Short areaId, String port, Byte finaleCheck,
			String unitData, String createdBy, Date createdDate,
			String changedBy, Date changedDate, Short passUnitId,
			Short failUnitId, Byte deleted,
			
			Set<ResultsHeader> resultsHeaders
			) {
		this.id = id;
		this.servers = servers;
		
		this.devices = devices;
		this.descriptor = descriptor;
		this.description = description;
		this.note = note;
		this.config = config;
		this.lineId = lineId;
		this.pcId = pcId;
		this.areaId = areaId;
		this.port = port;
		this.finaleCheck = finaleCheck;
		this.unitData = unitData;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.changedBy = changedBy;
		this.changedDate = changedDate;
		this.passUnitId = passUnitId;
		this.failUnitId = failUnitId;
		this.deleted = deleted;
		
		this.resultsHeaders = resultsHeaders;
		
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "unitId", column = @Column(name = "UNIT_ID", nullable = false)),
			@AttributeOverride(name = "server", column = @Column(name = "SERVER", nullable = false)) })
	public UnitsId getId() {
		return this.id;
	}

	public void setId(UnitsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SERVER", nullable = false, insertable = false, updatable = false)
	public Servers getServers() {
		return this.servers;
	}

	public void setServers(Servers servers) {
		this.servers = servers;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEVICE_ID", nullable = false)
	public Devices getDevices() {
		return this.devices;
	}

	public void setDevices(Devices devices) {
		this.devices = devices;
	}

	@Column(name = "DESCRIPTOR")
	public String getDescriptor() {
		return this.descriptor;
	}

	public void setDescriptor(String descriptor) {
		this.descriptor = descriptor;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "NOTE")
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Column(name = "CONFIG")
	public String getConfig() {
		return this.config;
	}

	public void setConfig(String config) {
		this.config = config;
	}

	@Column(name = "LINE_ID", nullable = false)
	public Short getLineId() {
		return this.lineId;
	}

	public void setLineId(Short lineId) {
		this.lineId = lineId;
	}

	@Column(name = "PC_ID", nullable = false)
	public Short getPcId() {
		return this.pcId;
	}

	public void setPcId(Short pcId) {
		this.pcId = pcId;
	}

	@Column(name = "AREA_ID", nullable = false)
	public Short getAreaId() {
		return this.areaId;
	}

	public void setAreaId(Short areaId) {
		this.areaId = areaId;
	}

	@Column(name = "PORT")
	public String getPort() {
		return this.port;
	}

	public void setPort(String port) {
		this.port = port;
	}

	@Column(name = "FINALE_CHECK", nullable = false)
	public Byte getFinaleCheck() {
		return this.finaleCheck;
	}

	public void setFinaleCheck(Byte finaleCheck) {
		this.finaleCheck = finaleCheck;
	}

	@Column(name = "UNIT_DATA")
	public String getUnitData() {
		return this.unitData;
	}

	public void setUnitData(String unitData) {
		this.unitData = unitData;
	}

	@Column(name = "CREATED_BY")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false, length = 23)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "CHANGED_BY")
	public String getChangedBy() {
		return this.changedBy;
	}

	public void setChangedBy(String changedBy) {
		this.changedBy = changedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CHANGED_DATE", nullable = false, length = 23)
	public Date getChangedDate() {
		return this.changedDate;
	}

	public void setChangedDate(Date changedDate) {
		this.changedDate = changedDate;
	}

	@Column(name = "PASS_UNIT_ID", nullable = false)
	public Short getPassUnitId() {
		return this.passUnitId;
	}

	public void setPassUnitId(Short passUnitId) {
		this.passUnitId = passUnitId;
	}

	@Column(name = "FAIL_UNIT_ID", nullable = false)
	public Short getFailUnitId() {
		return this.failUnitId;
	}

	public void setFailUnitId(Short failUnitId) {
		this.failUnitId = failUnitId;
	}

	@Column(name = "DELETED", nullable = false)
	public Byte getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Byte deleted) {
		this.deleted = deleted;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "units")
	public Set<ResultsHeader> getResultsHeaders() {
		return this.resultsHeaders;
	}

	public void setResultsHeaders(Set<ResultsHeader> resultsHeaders) {
		this.resultsHeaders = resultsHeaders;
	}


}
