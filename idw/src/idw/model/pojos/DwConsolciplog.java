package idw.model.pojos;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DwConsolciplog generated by hbm2java
 */
@Entity
@Table(name = "dw_consolciplog")
public class DwConsolciplog implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idConsolciplog;
	private DwConsolid dwConsolidByIdConsolidFim;
	private DwConsolid dwConsolidByIdConsolidInicio;
	private OmPt omPt;
	private Date dthrIcip;
	private Date dthrFcip;
	private OmUsr omUsrByIdUsrEntrada;
	private OmUsr omUsrByIdUsrSaida;
	private DwConsolpalog dwConsolpalogByIdConsolpalogEntrada;
	private DwConsolpalog dwConsolpalogByIdConsolpalogSaida;

	public DwConsolciplog() {
	}

	public DwConsolciplog(Long idConsolciplog) {
		this.idConsolciplog = idConsolciplog;
	}

	public DwConsolciplog(Long idConsolciplog, DwConsolid dwConsolidByIdConsolidFim,
			DwConsolid dwConsolidByIdConsolidInicio, OmPt omPt, Date dthrIcip, Date dthrFcip) {
		this.idConsolciplog = idConsolciplog;
		this.dwConsolidByIdConsolidFim = dwConsolidByIdConsolidFim;
		this.dwConsolidByIdConsolidInicio = dwConsolidByIdConsolidInicio;
		this.omPt = omPt;
		this.dthrIcip = dthrIcip;
		this.dthrFcip = dthrFcip;
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "DW_CONSOLCIPLOG_SEQ")
	@javax.persistence.SequenceGenerator(name = "DW_CONSOLCIPLOG_SEQ", sequenceName = "DW_CONSOLCIPLOG_SEQ")
	@Column(name = "id_consolciplog", unique = true, nullable = false)
	public Long getIdConsolciplog() {
		return this.idConsolciplog;
	}

	public void setIdConsolciplog(Long idConsolciplog) {
		this.idConsolciplog = idConsolciplog;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_consolid_fim")
	public DwConsolid getDwConsolidByIdConsolidFim() {
		return this.dwConsolidByIdConsolidFim;
	}

	public void setDwConsolidByIdConsolidFim(DwConsolid dwConsolidByIdConsolidFim) {
		this.dwConsolidByIdConsolidFim = dwConsolidByIdConsolidFim;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_consolid_inicio")
	public DwConsolid getDwConsolidByIdConsolidInicio() {
		return this.dwConsolidByIdConsolidInicio;
	}

	public void setDwConsolidByIdConsolidInicio(DwConsolid dwConsolidByIdConsolidInicio) {
		this.dwConsolidByIdConsolidInicio = dwConsolidByIdConsolidInicio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pt")
	public OmPt getOmPt() {
		return this.omPt;
	}

	public void setOmPt(OmPt omPt) {
		this.omPt = omPt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_icip")
	public Date getDthrIcip() {
		return this.dthrIcip;
	}

	public void setDthrIcip(Date dthrIcip) {
		this.dthrIcip = dthrIcip;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_fcip")
	public Date getDthrFcip() {
		return this.dthrFcip;
	}

	public void setDthrFcip(Date dthrFcip) {
		this.dthrFcip = dthrFcip;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_consolpalogEntrada")
	public DwConsolpalog getDwConsolpalogByIdConsolpalogEntrada() {
		return this.dwConsolpalogByIdConsolpalogEntrada;
	}

	public void setDwConsolpalogByIdConsolpalogEntrada(DwConsolpalog dwConsolpalogByIdConsolpalogEntrada) {
		this.dwConsolpalogByIdConsolpalogEntrada = dwConsolpalogByIdConsolpalogEntrada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_consolpalogSaida")
	public DwConsolpalog getDwConsolpalogByIdConsolpalogSaida() {
		return this.dwConsolpalogByIdConsolpalogSaida;
	}

	public void setDwConsolpalogByIdConsolpalogSaida(DwConsolpalog dwConsolpalogByIdConsolpalogSaida) {
		this.dwConsolpalogByIdConsolpalogSaida = dwConsolpalogByIdConsolpalogSaida;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrEntrada")
	public OmUsr getOmUsrByIdUsrEntrada() {
		return this.omUsrByIdUsrEntrada;
	}

	public void setOmUsrByIdUsrEntrada(OmUsr omUsrByIdUsrEntrada) {
		this.omUsrByIdUsrEntrada = omUsrByIdUsrEntrada;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrSaida")
	public OmUsr getOmUsrByIdUsrSaida() {
		return this.omUsrByIdUsrSaida;
	}

	public void setOmUsrByIdUsrSaida(OmUsr omUsrByIdUsrSaida) {
		this.omUsrByIdUsrSaida = omUsrByIdUsrSaida;
	}
}
