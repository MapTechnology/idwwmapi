package idw.model.pojos;

// Generated 05/01/2010 11:04:20 by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * OmPrgpos generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "om_prgpos")
public class OmPrgpos implements java.io.Serializable {

	private long idPrgpos;
	private OmPa omPa;
	private OmProduto omProduto;
	private OmPrg omPrg;
	private String scantrack;
	private String feedertrack;
	private String pocket;
	private String name;
	private String feedertable;
	private BigDecimal posicao;
	private Integer ordem;
	private BigDecimal qtUsada;
	private DwRap dwRapByIdRaptipofeeder;
	private DwRap dwRapByIdRaptipomesa;
///	private DwRap dwRapByIdRaptipofeeder;
//	private DwRap dwRapByIdRaptipomesa;
	
	// criar aqui os produtos alternativos, depois alterar a inclusao sql rodado, alterar hibernate
	private Set<OmPrgposproalt> omPrgposproalts = new HashSet<>();

	public OmPrgpos() {
	}

	public OmPrgpos(long idPrgpos, OmPa omPa, OmProduto omProduto, OmPrg omPrg) {
		this.idPrgpos = idPrgpos;
		this.omPa = omPa;
		this.omProduto = omProduto;
		this.omPrg = omPrg;
	}

	public OmPrgpos(long idPrgpos, OmPa omPa, OmProduto omProduto, OmPrg omPrg,
			String scantrack, String feedertrack, String pocket, String name,
			String feedertable, BigDecimal posicao, Integer ordem, DwRap dwRapByIdRaptipomesa,
			DwRap dwRapByidRaptipofeeder) {
		this.idPrgpos = idPrgpos;
		this.omPa = omPa;
		this.omProduto = omProduto;
		this.omPrg = omPrg;
		this.scantrack = scantrack;
		this.feedertrack = feedertrack;
		this.pocket = pocket;
		this.name = name;
		this.feedertable = feedertable;
		this.posicao = posicao;
		this.ordem = ordem;
		this.dwRapByIdRaptipomesa = dwRapByIdRaptipomesa;
		this.dwRapByIdRaptipofeeder = dwRapByidRaptipofeeder;
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "OM_PRGPOS_SEQ")
	@javax.persistence.SequenceGenerator(name = "OM_PRGPOS_SEQ", sequenceName = "OM_PRGPOS_SEQ")
	@Column(name = "id_prgpos", unique = true, nullable = false)
	public long getIdPrgpos() {
		return this.idPrgpos;
	}

	public void setIdPrgpos(long idPrgpos) {
		this.idPrgpos = idPrgpos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pa", nullable = false)
	public OmPa getOmPa() {
		return this.omPa;
	}

	public void setOmPa(OmPa omPa) {
		this.omPa = omPa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_produto", nullable = false)
	public OmProduto getOmProduto() {
		return this.omProduto;
	}

	public void setOmProduto(OmProduto omProduto) {
		this.omProduto = omProduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_prg", nullable = false)
	public OmPrg getOmPrg() {
		return this.omPrg;
	}

	public void setOmPrg(OmPrg omPrg) {
		this.omPrg = omPrg;
	}

	@Column(name = "scantrack", length = 100)
	public String getScantrack() {
		return this.scantrack;
	}

	public void setScantrack(String scantrack) {
		this.scantrack = scantrack;
	}

	@Column(name = "feedertrack", length = 100)
	public String getFeedertrack() {
		return this.feedertrack;
	}

	public void setFeedertrack(String feedertrack) {
		this.feedertrack = feedertrack;
	}

	@Column(name = "pocket", length = 100)
	public String getPocket() {
		return this.pocket;
	}

	public void setPocket(String pocket) {
		this.pocket = pocket;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "feedertable", length = 100)
	public String getFeedertable() {
		return this.feedertable;
	}

	public void setFeedertable(String feedertable) {
		this.feedertable = feedertable;
	}

	@Column(name = "posicao", precision = 8, scale = 4)
	public BigDecimal getPosicao() {
		return this.posicao;
	}

	public void setPosicao(BigDecimal posicao) {
		this.posicao = posicao;
	}

	@Column(name = "ordem")
	public Integer getOrdem() {
		return this.ordem;
	}

	public void setOrdem(Integer ordem) {
		this.ordem = ordem;
	}

	@Column(name = "qt_usada", precision = 14, scale = 4)
	public BigDecimal getQtUsada() {
		return this.qtUsada;
	}

	public void setQtUsada(BigDecimal qtUsada) {
		this.qtUsada = qtUsada;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_RAPTIPOFEEDER")
	public DwRap getDwRapByIdRaptipofeeder() {
		return this.dwRapByIdRaptipofeeder;
	}

	public void setDwRapByIdRaptipofeeder(DwRap dwRapByIdRaptipofeeder) {
		this.dwRapByIdRaptipofeeder = dwRapByIdRaptipofeeder;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_RAPTIPOMESA")
	public DwRap getDwRapByIdRaptipomesa() {
		return this.dwRapByIdRaptipomesa;
	}

	public void setDwRapByIdRaptipomesa(DwRap dwRapByIdRaptipomesa) {
		this.dwRapByIdRaptipomesa = dwRapByIdRaptipomesa;
	}

	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "omPrgpos")
	public Set<OmPrgposproalt> getOmPrgposproalts() {
		return omPrgposproalts;
	}

	public void setOmPrgposproalts(Set<OmPrgposproalt> omPrgposproalts) {
		this.omPrgposproalts = omPrgposproalts;
	}
}
