package idw.model.pojos;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

// Generated 11/01/2010 15:35:09 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.DwPeproTemplate;


/**
 * DwPepro generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "dw_pepro")
public class DwPepro extends DwPeproTemplate implements java.io.Serializable {

	private long idPepro;
	private String dsPepro;
	private Set<DwConsolid> dwConsolids = new HashSet<DwConsolid>(0);
	private Set<OmCfg> omCfgsForIdPeproCtreproc = new HashSet<OmCfg>(0);
	private Set<OmCfg> omCfgsForIdPeproNormal = new HashSet<OmCfg>(0);

	public DwPepro() {
	}

	public DwPepro(long idPepro) {
		this.idPepro = idPepro;
	}

	public DwPepro(long idPepro, String dsPepro, Set<DwConsolid> dwConsolids,
			Set<OmCfg> omCfgsForIdPeproCtreproc,
			Set<OmCfg> omCfgsForIdPeproNormal) {
		this.idPepro = idPepro;
		this.dsPepro = dsPepro;
		this.dwConsolids = dwConsolids;
		this.omCfgsForIdPeproCtreproc = omCfgsForIdPeproCtreproc;
		this.omCfgsForIdPeproNormal = omCfgsForIdPeproNormal;
	}

	@Id
	@Column(name = "id_pepro", unique = true, nullable = false)
	public long getIdPepro() {
		return this.idPepro;
	}

	public void setIdPepro(long idPepro) {
		this.idPepro = idPepro;
	}

	@Column(name = "ds_pepro", length = 40)
	public String getDsPepro() {
		return this.dsPepro;
	}

	public void setDsPepro(String dsPepro) {
		this.dsPepro = dsPepro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwPepro")
	public Set<DwConsolid> getDwConsolids() {
		return this.dwConsolids;
	}

	public void setDwConsolids(Set<DwConsolid> dwConsolids) {
		this.dwConsolids = dwConsolids;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwPeproByIdPeproctreproc")
	public Set<OmCfg> getOmCfgsForIdPeproCtreproc() {
		return this.omCfgsForIdPeproCtreproc;
	}

	public void setOmCfgsForIdPeproCtreproc(Set<OmCfg> omCfgsForIdPeproCtreproc) {
		this.omCfgsForIdPeproCtreproc = omCfgsForIdPeproCtreproc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwPeproByIdPepronormal")
	public Set<OmCfg> getOmCfgsForIdPeproNormal() {
		return this.omCfgsForIdPeproNormal;
	}

	public void setOmCfgsForIdPeproNormal(Set<OmCfg> omCfgsForIdPeproNormal) {
		this.omCfgsForIdPeproNormal = omCfgsForIdPeproNormal;
	}

}
