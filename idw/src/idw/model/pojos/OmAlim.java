package idw.model.pojos;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// Generated 05/01/2010 11:04:20 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.OmAlimTemplate;


/**
 * OmAlim generated by hbm2java
 */


@SuppressWarnings("serial")
@Entity
@Table(name = "om_alim")
public class OmAlim extends OmAlimTemplate implements java.io.Serializable {

	private long idAlim;
	private OmUsr omUsr;
	private OmMapa omMapa;
	private String cdAlim;
	private String dsAlim;	
	private Date dtStativo;
	private Byte tpAlim;
	private Byte stAlim;
	private Set<OmAlimrea> omAlimreas = new HashSet<OmAlimrea>(0);
	private Set<OmPt> omPtsForIdAlimcorrente = new HashSet<OmPt>(0);
	private Set<OmPt> omPtsForIdAlimpre = new HashSet<OmPt>(0);
	private Set<OmPt> omPtsForIdAlim = new HashSet<OmPt>(0);
	  
	//private String cdProd; //adicionado para filtro por cod produto e data
	//private String dataDe; //
	//private String dataAte; //
	
	
	public OmAlim() {
		
	}

	public OmAlim(long idAlim, OmMapa omMapa) {
		this.idAlim = idAlim;
		this.omMapa = omMapa;
	}

	public OmAlim(long idAlim, OmUsr omUsr, OmMapa omMapa, String cdAlim,
			String dsAlim, Date dtStativo, Byte tpAlim, Byte stAlim,
			Set<OmAlimrea> omAlimreas, Set<OmPt> omPtsForIdAlimcorrente,
			Set<OmPt> omPtsForIdAlimpre, Set<OmPt> omPtsForIdAlim, String cdProd,
			String dataDe, String dataAte) {
		this.idAlim = idAlim;
		this.omUsr = omUsr;
		this.omMapa = omMapa;
		this.cdAlim = cdAlim;
		this.dsAlim = dsAlim;
		
		//this.setCdProd(cdProd); //adicionado para filtro de data e produto
		//this.dataDe = dataDe;
		//this.dataAte = dataAte;
		
		this.dtStativo = dtStativo;
		this.tpAlim = tpAlim;
		this.stAlim = stAlim;
		this.omAlimreas = omAlimreas;
		this.omPtsForIdAlimcorrente = omPtsForIdAlimcorrente;
		this.omPtsForIdAlimpre = omPtsForIdAlimpre;
		this.omPtsForIdAlim = omPtsForIdAlim;
				 
	   
		
		
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "OM_ALIM_SEQ")
	@javax.persistence.SequenceGenerator(name = "OM_ALIM_SEQ", sequenceName = "OM_ALIM_SEQ")
	@Column(name = "id_alim", unique = true, nullable = false)
	public long getIdAlim() {
		return this.idAlim;
	}

	public void setIdAlim(long idAlim) {
		this.idAlim = idAlim;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrstativo")
	public OmUsr getOmUsr() {
		return this.omUsr;
	}

	public void setOmUsr(OmUsr omUsr) {
		this.omUsr = omUsr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_mapa", nullable = false)
	public OmMapa getOmMapa() {
		return this.omMapa;
	}

	public void setOmMapa(OmMapa omMapa) {
		this.omMapa = omMapa;
	}

	@Column(name = "cd_alim", length = 30)
	public String getCdAlim() {
		return this.cdAlim;
	}

	public void setCdAlim(String cdAlim) {
		this.cdAlim = cdAlim;
	}

	@Column(name = "ds_alim", length = 256)
	public String getDsAlim() {
		return this.dsAlim;
	}

	public void setDsAlim(String dsAlim) {
		this.dsAlim = dsAlim;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_stativo", length = 23)
	public Date getDtStativo() {
		return this.dtStativo;
	}

	public void setDtStativo(Date dtStativo) {
		this.dtStativo = dtStativo;
	}

	@Column(name = "tp_alim")
	public Byte getTpAlim() {
		return this.tpAlim;
	}

	public void setTpAlim(Byte tpAlim) {
		this.tpAlim = tpAlim;
	}

	@Column(name = "st_alim")
	public Byte getStAlim() {
		return this.stAlim;
	}

	public void setStAlim(Byte stAlim) {
		this.stAlim = stAlim;
	}	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "omAlim")
	public Set<OmAlimrea> getOmAlimreas() {
		return this.omAlimreas;
	}

	public void setOmAlimreas(Set<OmAlimrea> omAlimreas) {
		this.omAlimreas = omAlimreas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "omAlimByIdAlimcorrente")
	public Set<OmPt> getOmPtsForIdAlimcorrente() {
		return this.omPtsForIdAlimcorrente;
	}

	public void setOmPtsForIdAlimcorrente(Set<OmPt> omPtsForIdAlimcorrente) {
		this.omPtsForIdAlimcorrente = omPtsForIdAlimcorrente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "omAlimByIdAlimpre")
	public Set<OmPt> getOmPtsForIdAlimpre() {
		return this.omPtsForIdAlimpre;
	}

	public void setOmPtsForIdAlimpre(Set<OmPt> omPtsForIdAlimpre) {
		this.omPtsForIdAlimpre = omPtsForIdAlimpre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "omAlimByIdAlim")
	public Set<OmPt> getOmPtsForIdAlim() {
		return this.omPtsForIdAlim;
	}

	
	public void setOmPtsForIdAlim(Set<OmPt> omPtsForIdAlim) {
		this.omPtsForIdAlim = omPtsForIdAlim;
	}
	
	
	/*

	public String getCdProd() {
		return cdProd;
	}

	public void setCdProd(String cdProd) {
		this.cdProd = cdProd;
	}
	public void clearCdProd(){
		this.cdProd = null;
	}

	
	*/
		

	

	
    
	

}
