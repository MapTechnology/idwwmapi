package idw.model.pojos;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

// Generated 11/01/2010 15:35:09 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.DwFtSubparamTemplate;


/**
 * DwFtSubparam generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "dw_ft_subparam")
public class DwFtSubparam extends DwFtSubparamTemplate implements java.io.Serializable {

	private long idSubparam;
	private DwFtSub dwFtSub;
	private DwFtParam dwFtParam;
	private Set<DwTestesubetapa> dwTestesubetapas = new HashSet<DwTestesubetapa>(
			0);

	public DwFtSubparam() {
	}

	public DwFtSubparam(long idSubparam, DwFtSub dwFtSub, DwFtParam dwFtParam) {
		this.idSubparam = idSubparam;
		this.dwFtSub = dwFtSub;
		this.dwFtParam = dwFtParam;
	}

	public DwFtSubparam(long idSubparam, DwFtSub dwFtSub, DwFtParam dwFtParam,
			Set<DwTestesubetapa> dwTestesubetapas) {
		this.idSubparam = idSubparam;
		this.dwFtSub = dwFtSub;
		this.dwFtParam = dwFtParam;
		this.dwTestesubetapas = dwTestesubetapas;
	}

	@Id	
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "DW_FT_SUBPARAM_SEQ")
	@javax.persistence.SequenceGenerator(name = "DW_FT_SUBPARAM_SEQ", sequenceName = "DW_FT_SUBPARAM_SEQ")
	@Column(name = "id_subparam", nullable = false)
	public long getIdSubparam() {
		return this.idSubparam;
	}

	public void setIdSubparam(long idSubparam) {
		this.idSubparam = idSubparam;
	}

	@ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ft_sub", nullable = false)
	public DwFtSub getDwFtSub() {
		return this.dwFtSub;
	}

	public void setDwFtSub(DwFtSub dwFtSub) {
		this.dwFtSub = dwFtSub;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ft_param", nullable = false)
	public DwFtParam getDwFtParam() {
		return this.dwFtParam;
	}

	public void setDwFtParam(DwFtParam dwFtParam) {
		this.dwFtParam = dwFtParam;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwFtSubparam")
	public Set<DwTestesubetapa> getDwTestesubetapas() {
		return this.dwTestesubetapas;
	}

	public void setDwTestesubetapas(Set<DwTestesubetapa> dwTestesubetapas) {
		this.dwTestesubetapas = dwTestesubetapas;
	}

}
