package idw.model.pojos;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

// Generated 05/01/2010 11:04:20 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.OmHomogtTemplate;


/**
 * OmHomogt generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "om_homogt", uniqueConstraints = @UniqueConstraint(columnNames = {
		"id_usrhomologado", "id_gt" }))
public class OmHomogt extends OmHomogtTemplate implements java.io.Serializable {

	private long idHomogt;
	private OmUsr omUsrByIdUsr;
	private OmGt omGt;
	private OmUsr omUsrByIdUsrhomologado;
	private Date dtHomogt;
	private Byte tpHomogt;

	public OmHomogt() {
	}

	public OmHomogt(long idHomogt, OmUsr omUsrByIdUsr, OmGt omGt,
			OmUsr omUsrByIdUsrhomologado) {
		this.idHomogt = idHomogt;
		this.omUsrByIdUsr = omUsrByIdUsr;
		this.omGt = omGt;
		this.omUsrByIdUsrhomologado = omUsrByIdUsrhomologado;
	}

	public OmHomogt(long idHomogt, OmUsr omUsrByIdUsr, OmGt omGt,
			OmUsr omUsrByIdUsrhomologado, Date dtHomogt, Byte tpHomogt) {
		this.idHomogt = idHomogt;
		this.omUsrByIdUsr = omUsrByIdUsr;
		this.omGt = omGt;
		this.omUsrByIdUsrhomologado = omUsrByIdUsrhomologado;
		this.dtHomogt = dtHomogt;
		this.tpHomogt = tpHomogt;
	}

	@Id	
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "OM_HOMOGT_SEQ")
	@javax.persistence.SequenceGenerator(name = "OM_HOMOGT_SEQ", sequenceName = "OM_HOMOGT_SEQ")
	@Column(name = "id_homogt", nullable = false)
	public long getIdHomogt() {
		return this.idHomogt;
	}

	public void setIdHomogt(long idHomogt) {
		this.idHomogt = idHomogt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usr", nullable = false)
	public OmUsr getOmUsrByIdUsr() {
		return this.omUsrByIdUsr;
	}

	public void setOmUsrByIdUsr(OmUsr omUsrByIdUsr) {
		this.omUsrByIdUsr = omUsrByIdUsr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_gt", nullable = false)
	public OmGt getOmGt() {
		return this.omGt;
	}

	public void setOmGt(OmGt omGt) {
		this.omGt = omGt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrhomologado", nullable = false)
	public OmUsr getOmUsrByIdUsrhomologado() {
		return this.omUsrByIdUsrhomologado;
	}

	public void setOmUsrByIdUsrhomologado(OmUsr omUsrByIdUsrhomologado) {
		this.omUsrByIdUsrhomologado = omUsrByIdUsrhomologado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_homogt", length = 23)
	public Date getDtHomogt() {
		return this.dtHomogt;
	}

	public void setDtHomogt(Date dtHomogt) {
		this.dtHomogt = dtHomogt;
	}

	@Column(name = "tp_homogt")
	public Byte getTpHomogt() {
		return this.tpHomogt;
	}

	public void setTpHomogt(Byte tpHomogt) {
		this.tpHomogt = tpHomogt;
	}

}
