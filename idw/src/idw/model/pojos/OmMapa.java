package idw.model.pojos;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

// Generated 05/01/2010 11:04:20 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.OmMapaTemplate;


/**
 * OmMapa generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "om_mapa", uniqueConstraints = @UniqueConstraint(columnNames = {
		"id_pt", "cd_mapa", "revisao" }))
public class OmMapa extends OmMapaTemplate implements java.io.Serializable {

	private long idMapa;
	private OmProduto omProduto;
	private OmPrg omPrg;
	private OmUsr omUsrByIdUsrstativo;
	private OmPt omPt;
	private OmUsr omUsrByIdUsrrevisao;
	private String cdMapa;
	private Long revisao;
	private String dsMapa;
	private Date dtRevisao;
	private Date dtStativo;
	private Byte stAtivo;
	private DwFolha dwFolha;
	private Set<OmMapapa> omMapapas = new HashSet<OmMapapa>(0);
	private Set<OmAlim> omAlims = new HashSet<OmAlim>(0);

	
	private Set<OmMapaAnexo> omMapaAnexoForIdMapa = new HashSet<>(0);
	private Set<OmMapaAnexo> omMapaAnexoForIdMapaFilho = new HashSet<>(0);
	
	

	public OmMapa() {
	}

	public OmMapa(long idMapa, OmProduto omProduto, OmUsr omUsrByIdUsrstativo, OmPt omPt, OmUsr omUsrByIdUsrrevisao) {
		this.idMapa = idMapa;
		this.omProduto = omProduto;
		this.omUsrByIdUsrstativo = omUsrByIdUsrstativo;
		this.omPt = omPt;
		this.omUsrByIdUsrrevisao = omUsrByIdUsrrevisao;
	}

	public OmMapa(long idMapa, OmProduto omProduto, OmPrg omPrg,
			OmUsr omUsrByIdUsrstativo, OmPt omPt, OmUsr omUsrByIdUsrrevisao,
			String cdMapa, Long revisao, String dsMapa, Date dtRevisao,
			Date dtStativo, Byte stAtivo, Set<OmMapapa> omMapapas,
			Set<OmAlim> omAlims) {
		this.idMapa = idMapa;
		this.omProduto = omProduto;
		this.omPrg = omPrg;
		this.omUsrByIdUsrstativo = omUsrByIdUsrstativo;
		this.omPt = omPt;
		this.omUsrByIdUsrrevisao = omUsrByIdUsrrevisao;
		this.cdMapa = cdMapa;
		this.revisao = revisao;
		this.dsMapa = dsMapa;
		this.dtRevisao = dtRevisao;
		this.dtStativo = dtStativo;
		this.stAtivo = stAtivo;
		this.omMapapas = omMapapas;
		this.omAlims = omAlims;
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "OM_MAPA_SEQ")
	@javax.persistence.SequenceGenerator(name = "OM_MAPA_SEQ", sequenceName = "OM_MAPA_SEQ")
	@Column(name = "id_mapa", unique = true, nullable = false)
	public long getIdMapa() {
		return this.idMapa;
	}

	public void setIdMapa(long idMapa) {
		this.idMapa = idMapa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_produto", nullable = false)
	public OmProduto getOmProduto() {
		return this.omProduto;
	}

	public void setOmProduto(OmProduto omProduto) {
		this.omProduto = omProduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_prg")
	public OmPrg getOmPrg() {
		return this.omPrg;
	}

	public void setOmPrg(OmPrg omPrg) {
		this.omPrg = omPrg;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrstativo", nullable = false)
	public OmUsr getOmUsrByIdUsrstativo() {
		return this.omUsrByIdUsrstativo;
	}

	public void setOmUsrByIdUsrstativo(OmUsr omUsrByIdUsrstativo) {
		this.omUsrByIdUsrstativo = omUsrByIdUsrstativo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_pt", nullable = false)
	public OmPt getOmPt() {
		return this.omPt;
	}

	public void setOmPt(OmPt omPt) {
		this.omPt = omPt;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usrrevisao", nullable = false)
	public OmUsr getOmUsrByIdUsrrevisao() {
		return this.omUsrByIdUsrrevisao;
	}

	public void setOmUsrByIdUsrrevisao(OmUsr omUsrByIdUsrrevisao) {
		this.omUsrByIdUsrrevisao = omUsrByIdUsrrevisao;
	}

	@Column(name = "cd_mapa", length = 60)
	public String getCdMapa() {
		return this.cdMapa;
	}

	public void setCdMapa(String cdMapa) {
		this.cdMapa = cdMapa;
	}

	@Column(name = "revisao")
	public Long getRevisao() {
		return this.revisao;
	}

	public void setRevisao(Long revisao) {
		this.revisao = revisao;
	}

	@Column(name = "ds_mapa", length = 256)
	public String getDsMapa() {
		return this.dsMapa;
	}

	public void setDsMapa(String dsMapa) {
		this.dsMapa = dsMapa;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_revisao", length = 23)
	public Date getDtRevisao() {
		return this.dtRevisao;
	}

	public void setDtRevisao(Date dtRevisao) {
		this.dtRevisao = dtRevisao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dt_stativo", length = 23)
	public Date getDtStativo() {
		return this.dtStativo;
	}

	public void setDtStativo(Date dtStativo) {
		this.dtStativo = dtStativo;
	}

	@Column(name = "st_ativo")
	public Byte getStAtivo() {
		return this.stAtivo;
	}

	public void setStAtivo(Byte stAtivo) {
		this.stAtivo = stAtivo;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "omMapa")
	public Set<OmMapapa> getOmMapapas() {
		return this.omMapapas;
	}

	public void setOmMapapas(Set<OmMapapa> omMapapas) {
		this.omMapapas = omMapapas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "omMapa")
	public Set<OmAlim> getOmAlims() {
		return this.omAlims;
	}

	public void setOmAlims(Set<OmAlim> omAlims) {
		this.omAlims = omAlims;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_FOLHA")
	public DwFolha getDwFolha() {
		return this.dwFolha;
	}

	public void setDwFolha(DwFolha dwFolha) {
		this.dwFolha = dwFolha;
	}




	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "omMapaByIdMapa")
	public Set<OmMapaAnexo> getOmMapaAnexoForIdMapa() {
		return this.omMapaAnexoForIdMapa;
	}

	public void setOmMapaAnexoForIdMapa(Set<OmMapaAnexo> valor) {
		this.omMapaAnexoForIdMapa = valor;
	}
	
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "omMapaByIdMapaFilho")
	public Set<OmMapaAnexo> getOmMapaAnexoForIdMapaFilho() {
		return this.omMapaAnexoForIdMapaFilho;
	}

	public void setOmMapaAnexoForIdMapaFilho(Set<OmMapaAnexo> valor) {
		this.omMapaAnexoForIdMapaFilho = valor;
	}
	
}
