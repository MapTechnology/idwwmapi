package idw.model.pojos;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

// Generated 29/01/2010 13:18:21 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.DwFolhatesteTemplate;


/**
 * DwFolhateste generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "dw_folhateste")
public class DwFolhateste extends DwFolhatesteTemplate implements java.io.Serializable {

	private long idFolhateste;
	private OmProduto omProduto;
	private DwFolha dwFolha;
	private OmGt omGt;
	private Integer frequenciaHz;
	private BigDecimal tensaoMin;	
	private BigDecimal tensaoNom;
	private BigDecimal tensaoMax;

	private Set<DwTestesub> dwTestesubs = new HashSet<DwTestesub>(0);

	public DwFolhateste() {
	}

	public DwFolhateste(long idFolhateste, OmProduto omProduto,
			DwFolha dwFolha, OmGt omGt) {
		this.idFolhateste = idFolhateste;
		this.omProduto = omProduto;
		this.dwFolha = dwFolha;
		this.omGt = omGt;
	}

	public DwFolhateste(long idFolhateste, OmProduto omProduto,
			DwFolha dwFolha, OmGt omGt, Integer frequenciaHz,
			Set<DwTestesub> dwTestesubs) {
		this.idFolhateste = idFolhateste;
		this.omProduto = omProduto;
		this.dwFolha = dwFolha;
		this.omGt = omGt;
		this.frequenciaHz = frequenciaHz;
		this.dwTestesubs = dwTestesubs;
	}

	@Id	
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "DW_FOLHATESTE_SEQ")
	@javax.persistence.SequenceGenerator(name = "DW_FOLHATESTE_SEQ", sequenceName = "DW_FOLHATESTE_SEQ")
	@Column(name = "id_folhateste", nullable = false)
	public long getIdFolhateste() {
		return this.idFolhateste;
	}

	public void setIdFolhateste(long idFolhateste) {
		this.idFolhateste = idFolhateste;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_produto", nullable = false)
	public OmProduto getOmProduto() {
		return this.omProduto;
	}

	public void setOmProduto(OmProduto omProduto) {
		this.omProduto = omProduto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_folha", nullable = false)
	public DwFolha getDwFolha() {
		return this.dwFolha;
	}

	public void setDwFolha(DwFolha dwFolha) {
		this.dwFolha = dwFolha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_gt", nullable = false)
	public OmGt getOmGt() {
		return this.omGt;
	}

	public void setOmGt(OmGt omGt) {
		this.omGt = omGt;
	}

	@Column(name = "frequenciaHz")
	public Integer getFrequenciaHz() {
		return this.frequenciaHz;
	}

	public void setFrequenciaHz(Integer frequenciaHz) {
		this.frequenciaHz = frequenciaHz;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "dwFolhateste")
	public Set<DwTestesub> getDwTestesubs() {
		return this.dwTestesubs;
	}

	public void setDwTestesubs(Set<DwTestesub> dwTestesubs) {
		this.dwTestesubs = dwTestesubs;
	}
	@Column(name = "tensao_min", precision = 10, scale = 3)
	public BigDecimal getTensaoMin() {
		return this.tensaoMin;
	}

	public void setTensaoMin(BigDecimal minimoTensao) {
		this.tensaoMin = minimoTensao;
	}
	@Column(name = "tensao_nom", precision = 10, scale = 3)
	public BigDecimal getTensaoNom() {
		return this.tensaoNom;
	}

	public void setTensaoNom(BigDecimal minimoTensao) {
		this.tensaoNom = minimoTensao;
	}
	@Column(name = "tensao_max", precision = 10, scale = 3)
	public BigDecimal getTensaoMax() {
		return this.tensaoMax;
	}

	public void setTensaoMax(BigDecimal minimoTensao) {
		this.tensaoMax = minimoTensao;
	}
}
