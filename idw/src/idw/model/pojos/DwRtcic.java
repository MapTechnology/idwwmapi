package idw.model.pojos;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

// Generated 11/01/2010 15:35:09 by Hibernate Tools 3.2.4.GA

import idw.model.pojos.template.DwRtCicTemplate;

/**
 * DwRtcic generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "dw_rtcic")
public class DwRtcic extends DwRtCicTemplate implements java.io.Serializable {

	private long idRtcic;
	private DwRt dwRt;
	private Date dthrIciclo;
	private Byte msDthriciclo;
	private Date dthrFciclo;
	private Byte msDthrfciclo;
	private BigDecimal segDuracao;
	private DwFolha dwFolha;
	private PpCp ppCp;
	private Boolean isRegulagem;
	
	private Set<DwConsolmedparamlog> dwConsolmedparamlogs = new HashSet<DwConsolmedparamlog>(0);
	private Set<DwConsolpt> dwConsolpts = new HashSet<DwConsolpt>(0);

	public DwRtcic() {
	}

	public DwRtcic(long idRtcic, DwRt dwRt) {
		this.idRtcic = idRtcic;
		this.dwRt = dwRt;
	}

	public DwRtcic(long idRtcic, DwRt dwRt, Date dthrIciclo, Byte msDthriciclo,
			Date dthrFciclo, Byte msDthrfciclo, BigDecimal segDuracao) {
		this.idRtcic = idRtcic;
		this.dwRt = dwRt;
		this.dthrIciclo = dthrIciclo;
		this.msDthriciclo = msDthriciclo;
		this.dthrFciclo = dthrFciclo;
		this.msDthrfciclo = msDthrfciclo;
		this.segDuracao = segDuracao;
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "DW_RTCIC_SEQ")
	@javax.persistence.SequenceGenerator(name = "DW_RTCIC_SEQ", sequenceName = "DW_RTCIC_SEQ")
	@Column(name = "id_rtcic", unique = true, nullable = false)
	public long getIdRtcic() {
		return this.idRtcic;
	}

	public void setIdRtcic(long idRtcic) {
		this.idRtcic = idRtcic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_rt", nullable = false)
	public DwRt getDwRt() {
		return this.dwRt;
	}

	public void setDwRt(DwRt dwRt) {
		this.dwRt = dwRt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_iciclo", length = 23)
	public Date getDthrIciclo() {
		return this.dthrIciclo;
	}

	public void setDthrIciclo(Date dthrIciclo) {
		this.dthrIciclo = dthrIciclo;
	}

	@Column(name = "ms_dthriciclo")
	public Byte getMsDthriciclo() {
		return this.msDthriciclo;
	}

	public void setMsDthriciclo(Byte msDthriciclo) {
		this.msDthriciclo = msDthriciclo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dthr_fciclo", length = 23)
	public Date getDthrFciclo() {
		return this.dthrFciclo;
	}

	public void setDthrFciclo(Date dthrFciclo) {
		this.dthrFciclo = dthrFciclo;
	}

	@Column(name = "ms_dthrfciclo")
	public Byte getMsDthrfciclo() {
		return this.msDthrfciclo;
	}

	public void setMsDthrfciclo(Byte msDthrfciclo) {
		this.msDthrfciclo = msDthrfciclo;
	}

	@Column(name = "seg_duracao", precision = 20, scale = 10)
	public BigDecimal getSegDuracao() {
		return this.segDuracao;
	}

	public void setSegDuracao(BigDecimal segDuracao) {
		this.segDuracao = segDuracao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_folha", nullable = true)
	public DwFolha getDwFolha() {
		return this.dwFolha;
	}

	public void setDwFolha(DwFolha dwFolha) {
		this.dwFolha = dwFolha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_CP")
	public PpCp getPpCp() {
		return this.ppCp;
	}

	public void setPpCp(PpCp ppCp) {
		this.ppCp = ppCp;
	}
	
	@Column(name = "IS_REGULAGEM")
	public Boolean getIsRegulagem() {
		return this.isRegulagem;
	}

	public void setIsRegulagem(Boolean isRegulagem) {
		this.isRegulagem = isRegulagem;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwrtcic")
	public Set<DwConsolmedparamlog> getDwConsolmedparamlogs() {
		return this.dwConsolmedparamlogs;
	}

	public void setDwConsolmedparamlogs(Set<DwConsolmedparamlog> dwConsolmedparamlogs) {
		this.dwConsolmedparamlogs = dwConsolmedparamlogs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dwRtcic")
	public Set<DwConsolpt> getDwConsolpts() {
		return dwConsolpts;
	}

	public void setDwConsolpts(Set<DwConsolpt> dwConsolptsForIdRtcic) {
		this.dwConsolpts = dwConsolptsForIdRtcic;
	}
	
}
