# Configure root logger
rootLogger.level = info
# rootLogger.level = all
# rootLogger.level = fatal
rootLogger.appenderRef.rolling.ref = fileLogger

# status = warn
# name = idw

# Log files location
property.basePath = /LogsMapVF/logsMAP/
# property.basePath = /LogsMapVFlog4j2/logsMAP/
# property.basePath = /LogsMapVFlog4j2v46/logsMAP/


# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger

appender.rolling.fileName = ${basePath}idw.log

appender.rolling.filePattern = ${basePath}/idw_%d{yyyyMMdd}.log.gz
# appender.rolling.filePattern = ${basePath}/idw_%d{yyyyMMdd_HHmm}.log.gz

appender.rolling.layout.type = PatternLayout
# appender.rolling.layout.pattern = %d %5p (%F:%L) - %m%n
# appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %m%n
# appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p (%F:%L) %m%n
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n

appender.rolling.policies.type = Policies

# RollingFileAppender rotation policy

appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 1MB

appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

log4j.logger.org.hibernate = info
log4j.logger.org.apache.commons.vfs2.provider.ftp = OFF
