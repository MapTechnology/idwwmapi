package injetws.model.pojos;
// default package
// Generated 16/10/2008 15:14:14 by Hibernate Tools 3.2.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * PrSubColetor generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "PR_SUB_COLETOR", uniqueConstraints = @UniqueConstraint(columnNames = {
		"IDREGCOLETOR", "IDSUBCOLETOR" }))
public class PrSubColetor implements java.io.Serializable {

	private BigDecimal idregsubcoletor;
	private PrColetor prColetor;
	private BigDecimal idsubcoletor;
	private Set<PrUp> prUps = new HashSet<PrUp>(0);

	public PrSubColetor() {
	}

	public PrSubColetor(BigDecimal idregsubcoletor) {
		this.idregsubcoletor = idregsubcoletor;
	}

	public PrSubColetor(BigDecimal idregsubcoletor, PrColetor prColetor,
			BigDecimal idsubcoletor, Set<PrUp> prUps) {
		this.idregsubcoletor = idregsubcoletor;
		this.prColetor = prColetor;
		this.idsubcoletor = idsubcoletor;
		this.prUps = prUps;
	}

	@Id
	@javax.persistence.GeneratedValue(strategy=javax.persistence.GenerationType.AUTO, generator = "S_PR_SUB_COLETOR")
	@javax.persistence.SequenceGenerator(name = "S_PR_SUB_COLETOR", sequenceName = "S_PR_SUB_COLETOR")
	@Column(name = "IDREGSUBCOLETOR", unique = true, nullable = false, length = 36)
	public BigDecimal getIdregsubcoletor() {
		return this.idregsubcoletor;
	}

	public void setIdregsubcoletor(BigDecimal idregsubcoletor) {
		this.idregsubcoletor = idregsubcoletor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDREGCOLETOR")
	public PrColetor getPrColetor() {
		return this.prColetor;
	}

	public void setPrColetor(PrColetor prColetor) {
		this.prColetor = prColetor;
	}

	@Column(name = "IDSUBCOLETOR", precision = 22, scale = 0)
	public BigDecimal getIdsubcoletor() {
		return this.idsubcoletor;
	}

	public void setIdsubcoletor(BigDecimal idsubcoletor) {
		this.idsubcoletor = idsubcoletor;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "prSubColetor")
	public Set<PrUp> getPrUps() {
		return this.prUps;
	}

	public void setPrUps(Set<PrUp> prUps) {
		this.prUps = prUps;
	}

}
